---
import Layout from './Layout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';

interface Props {
  title: string;
  description: string;
  pubDate: Date;
  tags: string[];
}

const { title, description, pubDate, tags } = Astro.props;
---

<Layout title={title} description={description}>
  <Header />
  
  <main class="blog-content">
    <article>
      <header class="blog-header">
        <h1>{title}</h1>
        <div class="blog-meta">
          <time datetime={pubDate.toISOString()}>
            {pubDate.toLocaleDateString('en-US', {
              year: 'numeric',
              month: 'long',
              day: 'numeric'
            })}
          </time>
          <div class="blog-tags">
            {tags.map(tag => (
              <a href={`/blog/tags/${tag}`} class="tag">#{tag}</a>
            ))}
          </div>
        </div>
      </header>
      
      <div class="blog-body">
        <slot />
      </div>
    </article>
  </main>
  
  <Footer />
</Layout>

<style>
  .blog-content {
    max-width: 800px;
    margin: 2rem auto 4rem;
    padding: 0 2rem;
    background: linear-gradient(135deg, var(--background-color) 0%, #f8f9fa 100%);
    min-height: calc(100vh - 200px);
  }

  .blog-header {
    margin-bottom: 3rem;
    text-align: center;
  }

  .blog-header h1 {
    font-size: 2.5rem;
    color: var(--text-color);
    margin-bottom: 1rem;
  }

  .blog-meta {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 1rem;
    color: var(--text-color);
    opacity: 0.8;
  }

  .blog-tags {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
  }

  .tag {
    color: var(--primary-color);
    text-decoration: none;
    font-size: 0.9rem;
    transition: color 0.3s ease;
  }

  .tag:hover {
    color: var(--secondary-color);
  }

  .blog-body {
    font-size: 1.1rem;
    line-height: 1.8;
    color: var(--text-color);
    background: white;
    padding: 2rem;
    border-radius: 12px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }

  /* Markdown styles */
  .blog-body :global(h2) {
    font-size: 1.8rem;
    margin: 2rem 0 1rem;
    color: var(--text-color);
  }

  .blog-body :global(h3) {
    font-size: 1.5rem;
    margin: 1.5rem 0 1rem;
    color: var(--text-color);
  }

  .blog-body :global(p) {
    margin-bottom: 1.5rem;
    color: var(--text-color);
  }

  .blog-body :global(ul), 
  .blog-body :global(ol) {
    margin: 1rem 0;
    padding-left: 2rem;
    color: var(--text-color);
  }

  .blog-body :global(li) {
    margin-bottom: 0.5rem;
  }

  .blog-body :global(blockquote) {
    border-left: 4px solid var(--primary-color);
    padding-left: 1rem;
    margin: 1.5rem 0;
    font-style: italic;
    color: var(--text-color);
    opacity: 0.8;
  }

  .blog-body :global(code) {
    background: #f8f9fa;
    padding: 0.2rem 0.4rem;
    border-radius: 4px;
    font-family: monospace;
  }

  .blog-body :global(pre) {
    background: #f8f9fa;
    padding: 1rem;
    border-radius: 8px;
    overflow-x: auto;
    margin: 1.5rem 0;
  }

  .blog-body :global(img) {
    max-width: 100%;
    height: auto;
    border-radius: 8px;
    margin: 1.5rem 0;
  }

  @media (max-width: 768px) {
    .blog-content {
      margin-top: 1rem;
      padding: 0 1rem;
    }

    .blog-header h1 {
      font-size: 2rem;
    }

    .blog-meta {
      flex-direction: column;
      gap: 0.5rem;
    }

    .blog-body {
      padding: 1.5rem;
    }
  }
</style> 