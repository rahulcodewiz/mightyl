---
interface Book {
  id: string;
  title: string;
  coverImage: string;
  description: string;
  purchaseLink: string;
  ageRange: string;
  price: string;
}

// Parse the book data from the provided variable
const books = [
  {
    title: 'Diwali in Ayodhya: Hanuman Magic with Chotu and Chutki',
    description: 'A magical journey through the festival of lights in the ancient city of Ayodhya. Join the celebration as the city comes alive with joy, lights, and the spirit of togetherness.',
    coverImage: './images/book1-cover.jpg',
    amazonUrl: 'https://www.amazon.ca/dp/B0FBG4GR2N',
    features: [
      'üåæ Glimpse into Indian Village Life',
      'üêí Storytelling Through Beloved Characters- Chotu & Chutki',
      '‚ù§Ô∏è Cultural Preservation about Diwali, Rama, Hanuman',
      'Perfect for ages 4-11'
    ]
  },{
    title: 'Hanuman\'s Journey to the Sun',
    description: 'This is a story of a boy named Hanuman whose devotion became a timeless practice Surya Numaskara. Follow Chotu and Chutki as they discover the meaning behind the morning sun through love, movement, and myth.',
    coverImage: './images/book2-cover.svg',
    amazonUrl: '.',
    features: [
      'üêí Storytelling Through Beloved Characters',
      '‚ù§Ô∏è Cultural Preservation about ancient story of Surya and Hanuman',
      'Perfect for ages 4-11'
    ]
  }
];
---

<section id="books" class="book-showcase">
  <div class="container">
    <h2 class="section-title">Featured Books</h2>
    <p class="section-subtitle">Discover the magic of storytelling</p>

    <div class="carousel-container">
      <div class="carousel">
        {books.map((book, index) => (
          <div class="book-card" data-index={index}>
            <div class="book-cover">
              <img 
                src={book.coverImage} 
                alt={`Cover of ${book.title}`}
                width="300"
                height="400"
                loading="lazy"
              />
              <div class="book-overlay">
                <a 
                  href={book.amazonUrl}
                  class="cta-button"
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  <i class="fab fa-amazon"></i>
                </a>
              </div>
            </div>
            <div class="book-info">
              <h3 class="book-title">{book.title}</h3>
              <p class="book-description">{book.description}</p>
              
              <div class="book-features">
                <h4>Book Features:</h4>
                <ul>
                  {book.features.map(feature => (
                    <li>
                      <i class="fas fa-check"></i>
                      {feature}
                    </li>
                  ))}
                </ul>
              </div>


            </div>
          </div>
        ))}
      </div>

      <div class="carousel-dots">
        {books.map((_, index) => (
          <button 
            class="carousel-dot" 
            data-index={index}
            aria-label={`Go to book ${index + 1}`}
          ></button>
        ))}
      </div>
    </div>
  </div>
</section>
<div class="wavy-divider"></div>

<style>
  .book-showcase {
    padding: 6rem 2rem;
    background: linear-gradient(135deg, var(--background-color) 0%, #f8f9fa 100%);
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
  }

  .section-title {
    text-align: center;
    font-size: 2.5rem;
    color: var(--text-color);
    margin-bottom: 1rem;
  }

  .section-subtitle {
    text-align: center;
    color: var(--text-color);
    opacity: 0.8;
    margin-bottom: 3rem;
  }

  .carousel-container {
    position: relative;
    overflow: hidden;
  }

  .carousel {
    display: flex;
    position: relative;
    transition: transform 0.5s ease-in-out;
    width: 100%;
  }

  .book-card {
    flex: 0 0 100%;
    min-width: 100%;
    display: grid;
    grid-template-columns: 1fr 1.5fr;
    gap: 3rem;
    background: white;
    border-radius: 20px;
    padding: 2rem;
    box-shadow: 0 10px 30px hsla(0, 20%, 98%, 0.1);
    transition: transform 0.3s ease;
  }



  .carousel-dots {
    display: flex;
    justify-content: center;
    gap: 0.5rem;
    margin-top: 2rem;
  }

  .carousel-dot {
    width: 0.75rem;
    height: 0.75rem;
    border-radius: 50%;
    border: none;
    background: #ddd;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .carousel-dot.active {
    background: var(--primary-color);
    transform: scale(1.2);
  }

  .book-cover {
    position: relative;
    border-radius: 10px;
    overflow: hidden;
    box-shadow: 0 5px 15px rgba(244, 242, 242, 0.2);
    transition: transform 0.3s ease;
    width: 100%;
    max-width: 300px;
    margin: 6rem auto;
    display: inline-block;
    background: transparent;
  }

  .book-cover img {
    width: 100%;
    height: auto;
    display: block;
    object-fit: contain;
    background: transparent;
    position: relative;
    z-index: 1;
  }

  .book-cover:hover {
    transform: translateY(-5px);
  }

  .book-overlay {
    position: absolute;
    bottom: 0%;
    left: 50%;
    transform: translateX(-50%);
    z-index: 2;
  }

  .book-info {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  .book-title {
    font-size: 2rem;
    color: var(--text-color);
    margin-bottom: 0.5rem;
  }

  .book-description {
    font-size: 1.1rem;
    line-height: 1.6;
    color: var(--text-color);
    opacity: 0.9;
  }

  .book-features {
    background: #f8f9fa;
    padding: 1.5rem;
    border-radius: 10px;
  }

  .book-features h4 {
    font-size: 1.2rem;
    color: var(--text-color);
    margin-bottom: 1rem;
  }

  .book-features ul {
    list-style: none;
    padding: 0;
  }

  .book-features li {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    margin-bottom: 0.75rem;
    color: var(--text-color);
  }

  .book-features i {
    color: var(--primary-color);
  }



  .cta-button {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1.25rem;
    background: white;
    color: var(--primary-color);
    border-radius: 25px;
    font-weight: 600;
    font-size: 0.85rem;
    transition: all 0.3s ease;
    text-decoration: none;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15);
    border: 2px solid var(--primary-color);
  }

  .cta-button:hover {
    background: var(--primary-color);
    color: white;
    transform: translateY(-3px);
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.25);
  }

  .cta-button i {
    font-size: 1.2em;
  }

  @media (max-width: 968px) {
    .book-card {
      grid-template-columns: 1fr;
      gap: 2rem;
    }

    .book-cover {
      max-width: 250px;
    }

    .book-overlay {
      bottom: 10%;
    }

    .cta-button {
      padding: 0.6rem 1rem;
      font-size: 0.75rem;
      gap: 0.4rem;
    }

    .cta-button i {
      font-size: 1.1em;
    }
  }

  @media (max-width: 768px) {
    .book-showcase {
      padding: 4rem 1rem;
    }

    .section-title {
      font-size: 2rem;
    }

    .book-title {
      font-size: 1.75rem;
    }

    .book-description {
      font-size: 1rem;
    }


  }
</style>

<script>
  // Carousel functionality
  const carousel = document.querySelector('.carousel') as HTMLElement;
  const cards = document.querySelectorAll('.book-card');
  const dots = document.querySelectorAll('.carousel-dot');
  
  let currentIndex = 0;
  const totalCards = cards.length;

  function updateCarousel() {
    if (!carousel) return;
    
    // Update carousel position
    carousel.style.transform = `translateX(-${currentIndex * 100}%)`;
    
    // Update dots
    dots.forEach((dot, index) => {
      dot.classList.toggle('active', index === currentIndex);
    });
  }

  function goToSlide(index: number) {
    currentIndex = index;
    updateCarousel();
  }

  function nextSlide() {
    currentIndex = (currentIndex + 1) % totalCards;
    updateCarousel();
  }

  function prevSlide() {
    currentIndex = (currentIndex - 1 + totalCards) % totalCards;
    updateCarousel();
  }

  // Event listeners for dots
  dots.forEach((dot, index) => {
    dot.addEventListener('click', () => goToSlide(index));
  });

  // Initialize first dot as active
  dots[0].classList.add('active');

  // Optional: Auto-advance slides every 5 seconds
  let autoSlideInterval = setInterval(nextSlide, 5000);

  // Pause auto-advance when hovering over carousel
  if (carousel) {
    carousel.addEventListener('mouseenter', () => {
      clearInterval(autoSlideInterval);
    });

    carousel.addEventListener('mouseleave', () => {
      autoSlideInterval = setInterval(nextSlide, 5000);
    });
  }
</script> 